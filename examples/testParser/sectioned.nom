### sectioned.nom
## A first attempt at a high-level parameterization of "Wholly"

#### Some Surface colors #####
surface R color (1 0 0) endsurface          # Red
surface O color (0.9 0.6 0) endsurface      # Orange
surface Y color (1 1 0) endsurface          # Yellow
surface L color (0.6 0.8 0) endsurface      # Lime
surface G color (0 0.9 0) endsurface        # Green
surface A color (0 0.9 0.7) endsurface      # Aqua
surface C color (0 1 1) endsurface          # Cyan
surface U color (0 0.5 1) endsurface        # Uniform
surface B color (0 0 1) endsurface        # Blue
surface M color (1 0 1) endsurface        # Magenta
surface W color (1 1 1) endsurface        # White

## coordinate axes:
point ooo  ( 0 0 0 ) endpoint
point xoo  ( 1 0 0 ) endpoint
point oyo  ( 0 1 0 ) endpoint
point ooz  ( 0 0 1 ) endpoint
 polyline xaxis  (ooo xoo ) endpolyline
 polyline yaxis  (ooo oyo ) endpolyline
 polyline zaxis  (ooo ooz ) endpolyline
group coord_axes
   instance xa xaxis  surface R  endinstance
   instance ya yaxis  surface B  endinstance
   instance za zaxis  surface G  endinstance
endgroup
instance axes coord_axes  scale (1.5 1.5 1.5 )  endinstance


## generic cross sectioal slice -- to define all vertices in a hierarchical manner.
## transformations of those slaices:

bank p1
    set     scl      1        0.5     4      0.1
    set     rx       0      -90      90      1
    set     ry       0      -90      90      1
    set     rz       0      -90      90      1
    set     tx       8        4      12      0.1
    set     ty       0       -4       4      0.1
    set     tz       0       -4       4      0.1
endbank

bank p2
    set     scl      1        0.5     4      0.1
    set     rx       0      -90      90      1
    set     ry       0      -90      90      1
    set     rz       0      -90      90      1
    set     tx       6        2      10      0.1
    set     ty       0       -4       4      0.1
    set     tz       0       -4       4      0.1
endbank

bank p3
    set     scl      1        0.5     4      0.1
    set     rx       0      -90      90      1
    set     ry       0      -90      90      1
    set     rz       0      -90      90      1
    set     tx       4        0       8      0.1
    set     ty       0       -4       4      0.1
    set     tz       0       -4       4      0.1
endbank

bank p4
    set     scl      1        0.5     4      0.1
    set     rx       0      -90      90      1
    set     ry       0      -90      90      1
    set     rz       0      -90      90      1
    set     tx       2       -2       6      0.1
    set     ty       0       -4       4      0.1
    set     tz       0       -4       4      0.1
endbank


##  the slice geometry"
#group xs
  point iyz  ( 0  1  1 ) endpoint
  point ibz  ( 0 -1  1 ) endpoint
  point ibc  ( 0 -1 -1 ) endpoint
  point iyc  ( 0  1 -1 ) endpoint
  point oyz  ( 0  2  2 ) endpoint
  point obz  ( 0 -2  2 ) endpoint
  point obc  ( 0 -2 -2 ) endpoint
  point oyc  ( 0  2 -2 ) endpoint

  polyline pL  (iyz ibz ibc iyc  oyz obz obc oyc  ) endpolyline


  instance pL0 pL  scale ( {expr $p1_scl} {expr $p1_scl} {expr $p1_scl} )  translate (1 0 0)   rotate (1 0 0)({expr $p1_rx})  rotate (0 1 0)({expr $p1_ry})  rotate (0 0 1)({expr $p1_rz})   translate ({expr $p1_tx} {expr $p1_ty} {expr $p1_tz} )    endinstance
  instance pL1 pL  scale ( {expr $p1_scl} {expr $p1_scl} {expr $p1_scl} )   rotate (1 0 0)({expr $p1_rx})  rotate (0 1 0)({expr $p1_ry})  rotate (0 0 1)({expr $p1_rz})    translate ({expr $p1_tx} {expr $p1_ty} {expr $p1_tz} )    endinstance
  instance pL2 pL  scale ( {expr $p2_scl} {expr $p2_scl} {expr $p2_scl} )   rotate (1 0 0)({expr $p2_rx})  rotate (0 1 0)({expr $p2_ry})  rotate (0 0 1)({expr $p2_rz})    translate ({expr $p2_tx} {expr $p2_ty} {expr $p2_tz} )    endinstance
  instance pL3 pL  scale ( {expr $p3_scl} {expr $p3_scl} {expr $p3_scl} )   rotate (1 0 0)({expr $p3_rx})  rotate (0 1 0)({expr $p3_ry})  rotate (0 0 1)({expr $p3_rz})    translate ({expr $p3_tx} {expr $p3_ty} {expr $p3_tz} )    endinstance
  instance pL4 pL  scale ( {expr $p4_scl} {expr $p4_scl} {expr $p4_scl} )   rotate (1 0 0)({expr $p4_rx})  rotate (0 1 0)({expr $p4_ry})  rotate (0 0 1)({expr $p4_rz})    translate ({expr $p4_tx} {expr $p4_ty} {expr $p4_tz} )    endinstance



# manually add some faces between polyline vertices, and save consolidated mesh:

mesh consolidatedmesh
    face consolidatedface0 (_pL4_iyz _pL4_ibz _pL4_ibc _pL4_iyc )   surface C  endface
    face consolidatedface1 (_pL2_iyz _pL2_ibz _pL2_ibc _pL2_iyc )   surface C   endface
    face consolidatedface2 (_pL1_iyc _pL1_ibc _pL1_ibz _pL1_iyz )   surface O   endface
    face consolidatedface3 (_pL3_iyc _pL3_ibc _pL3_ibz _pL3_iyz )   surface O   endface
    face consolidatedface4 (_pL4_iyc _pL4_ibc _pL3_ibc _pL3_iyc )   surface U   endface
    face consolidatedface5 (_pL4_ibz _pL4_iyz _pL3_iyz _pL3_ibz )   surface U   endface
    face consolidatedface6 (_pL2_iyc _pL2_ibc _pL1_ibc _pL1_iyc )   surface U   endface
    face consolidatedface7 (_pL2_ibz _pL2_iyz _pL1_iyz _pL1_ibz )   surface U   endface

    face cf8   (_pL3_ibz _pL3_ibc _pL2_ibc _pL2_ibz )  surface G  endface
    face cf9   (_pL2_iyz _pL2_iyc _pL3_iyc _pL3_iyz )  surface G  endface
    face cf10  (_pL0_obz _pL1_ibz _pL1_ibc _pL0_obc )  surface L  endface
    face cf11  (_pL0_oyz _pL0_oyc _pL1_iyc _pL1_iyz )  surface L  endface

endmesh

instance cm1 consolidatedmesh endinstance

###  >>> This mesh can be manibulated, merged, and still deformed.
###  >>> But after consolidation it loses response to the parameters!
